{"version":3,"sources":["webpack:///webpack/bootstrap 2a763d8450ce6820e3d3","webpack:///./build/popup.js"],"names":["document","addEventListener","console","log","toggleContentScriptButton","getElementById","flag","e","preventDefault","innerHTML","chrome","tabs","query","active","currentWindow","sendMessage","id","data","toggleContenScript","response","booleanValueToChange"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEAA,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDC,UAAQC,GAAR,CAAY,6BAAZ;AACA,MAAMC,4BAA4BJ,SAASK,cAAT,CAAwB,qBAAxB,CAAlC;AACA,MAAIC,OAAO,IAAX;;AAEAF,4BAA0BH,gBAA1B,CAA2C,OAA3C,EAAoD,UAACM,CAAD,EAAO;AACzDA,MAAEC,cAAF;AACAN,YAAQC,GAAR,gDAAyDG,IAAzD;;AAEA,QAAIA,IAAJ,EAAU;AACRA,aAAO,KAAP;AACAF,gCAA0BK,SAA1B,GAAsC,mBAAtC;AACD,KAHD,MAGO;AACLH,aAAO,IAAP;AACAF,gCAA0BK,SAA1B,GAAsC,oBAAtC;AACD;AAEF,GAZD;;AAcAC,SAAOC,IAAP,CAAYC,KAAZ,CAAkB,EAACC,QAAQ,IAAT,EAAeC,eAAe,IAA9B,EAAlB,EAAuD,UAACH,IAAD,EAAU;AAC/DD,WAAOC,IAAP,CAAYI,WAAZ,CAAwBJ,KAAK,CAAL,EAAQK,EAAhC,EAAoC,EAACC,MAAMC,kBAAP,EAApC,EAAgE,UAACC,QAAD,EAAc;AAC5EjB,cAAQC,GAAR;AAMD,KAPD;AAQD,GATD;AAWD,CA9BD;;AAgCA,IAAMe,qBAAqB,SAArBA,kBAAqB,CAACE,oBAAD,EAA0B;AACnDA,yBAAuB,CAACA,oBAAxB;AACA,SAAOA,oBAAP;AACD,CAHD,C","file":"./build/popupCompiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a763d8450ce6820e3d3","document.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"DOM fully loaded and parsed\");\n  const toggleContentScriptButton = document.getElementById('toggleContentScript');\n  var flag = true;\n\n  toggleContentScriptButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    console.log(`button pressed when the value of flag was ${flag}`);\n\n    if (flag) {\n      flag = false;\n      toggleContentScriptButton.innerHTML = 'Turn On Extension';\n    } else {\n      flag = true;\n      toggleContentScriptButton.innerHTML = 'Turn Off Extension';\n    }\n\n  });\n\n  chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n    chrome.tabs.sendMessage(tabs[0].id, {data: toggleContenScript}, (response) => { \n      console.log(`\n        succ-----------------------ess\n        asdkasfaljsfaskjfnasjfasf\n        asdjasfjkabsfjabsf\n        asjkbdaskjbfasjkf\n      `);\n    });\n  });\n\n});\n\nconst toggleContenScript = (booleanValueToChange) => {\n  booleanValueToChange = !booleanValueToChange;\n  return booleanValueToChange;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./build/popup.js"],"sourceRoot":""}